[main]
name="BERT LM"
output="tests/outputs/bert"
tf_manager=<tf_manager>

train_dataset=<train_data>
val_dataset=<val_data>
test_datasets=[<val_data>]

runners=[<runner>]
trainer=<trainer>
evaluation=[("xent", "source_masked", <perplexity>), ("source", "source_masked", evaluators.Accuracy)]

batch_size=10
epochs=2

validation_period="10s"
logging_period="2s"
overwrite_output_dir=True


[batching_scheme]
class=dataset.BatchingScheme
bucket_batch_sizes=[30, 25, 12, 8, 6, 5]
bucket_boundaries=[5, 10, 15, 20, 25]

[tf_manager]
class=tf_manager.TensorFlowManager
num_sessions=1
num_threads=4

[accuracy]
class=evaluators.AccuracyEvaluator
mask_symbol="<pad>"

[perplexity]
class=evaluators.PerplexityEvaluator
name="perplexity"


[train_data]
class=dataset.load
batching=<batching_scheme>
# source_masked masks all tokens that weren't ``noisified''
series=["source_noisy", "source_masked"]
data=["tests/data/bert/train.pcedt.forms.noisy", "tests/data/bert/train.pcedt.forms.mask"]

[val_data]
class=dataset.load
series=["source_noisy", "source_masked"]
data=["tests/data/bert/val.pcedt.forms", "tests/data/bert/val.pcedt.forms"]
batching=<batching_scheme>

[vocabulary]
class=vocabulary.from_wordlist
path="tests/data/factored_decoder_vocab.tsv"

[sequence]
class=model.sequence.EmbeddedSequence
vocabulary=<vocabulary>
data_id="source_noisy"
embedding_size=6
scale_embeddings_by_depth=True
max_length=20

[encoder]
class=encoders.transformer.TransformerEncoder
name="encoder_bert"
input_sequence=<sequence>
ff_hidden_size=10
depth=2
n_heads=3
dropout_keep_prob=0.9

[labeler]
class=decoders.sequence_labeler.EmbeddingsLabeler
name="labeler_bert"
encoders=[<encoder>]
embedded_sequence=<sequence>
data_id="source_masked"
max_output_len=20
dropout_keep_prob=0.5

[trainer]
class=trainers.delayed_update_trainer.DelayedUpdateTrainer
batches_per_update=5
l2_weight=1.0e-8
clip_norm=1.0
objectives=[<obj>]

[obj]
class=trainers.cross_entropy_trainer.CostObjective
decoder=<labeler>

[runner]
class=runners.LabelRunner
decoder=<labeler>
output_series="source"

[runner_xent]
class=runners.XentRunner
decoder=<labeler>
output_series="xent"
